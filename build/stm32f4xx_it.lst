ARM GAS  /tmp/ccLY52cm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccLY52cm.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** 
  60:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f4xx_it.c **** 
  62:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f4xx_it.c **** 
  64:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f4xx_it.c **** /**
  68:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f4xx_it.c ****   */
  70:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 71 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE130:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB131:
ARM GAS  /tmp/ccLY52cm.s 			page 3


  72:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f4xx_it.c **** 
  74:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f4xx_it.c **** 
  77:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f4xx_it.c **** }
  79:Core/Src/stm32f4xx_it.c **** 
  80:Core/Src/stm32f4xx_it.c **** /**
  81:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Core/Src/stm32f4xx_it.c ****   */
  83:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  84:Core/Src/stm32f4xx_it.c **** {
  47              		.loc 1 84 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB132:
  85:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Core/Src/stm32f4xx_it.c **** 
  87:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Core/Src/stm32f4xx_it.c ****   while (1)
  89:Core/Src/stm32f4xx_it.c ****   {
  90:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c ****   }
  93:Core/Src/stm32f4xx_it.c **** }
  94:Core/Src/stm32f4xx_it.c **** 
  95:Core/Src/stm32f4xx_it.c **** /**
  96:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  97:Core/Src/stm32f4xx_it.c ****   */
  98:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  99:Core/Src/stm32f4xx_it.c **** {
  68              		.loc 1 99 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE132:
ARM GAS  /tmp/ccLY52cm.s 			page 4


  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB133:
 100:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c **** 
 102:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f4xx_it.c ****   while (1)
 104:Core/Src/stm32f4xx_it.c ****   {
 105:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c ****   }
 108:Core/Src/stm32f4xx_it.c **** }
 109:Core/Src/stm32f4xx_it.c **** 
 110:Core/Src/stm32f4xx_it.c **** /**
 111:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 112:Core/Src/stm32f4xx_it.c ****   */
 113:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 114:Core/Src/stm32f4xx_it.c **** {
  89              		.loc 1 114 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE133:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB134:
 115:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c **** 
 117:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 118:Core/Src/stm32f4xx_it.c ****   while (1)
 119:Core/Src/stm32f4xx_it.c ****   {
 120:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c ****   }
 123:Core/Src/stm32f4xx_it.c **** }
 124:Core/Src/stm32f4xx_it.c **** 
 125:Core/Src/stm32f4xx_it.c **** /**
 126:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 127:Core/Src/stm32f4xx_it.c ****   */
 128:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
ARM GAS  /tmp/ccLY52cm.s 			page 5


 129:Core/Src/stm32f4xx_it.c **** {
 110              		.loc 1 129 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE134:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB135:
 130:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c **** 
 132:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 133:Core/Src/stm32f4xx_it.c ****   while (1)
 134:Core/Src/stm32f4xx_it.c ****   {
 135:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c ****   }
 138:Core/Src/stm32f4xx_it.c **** }
 139:Core/Src/stm32f4xx_it.c **** 
 140:Core/Src/stm32f4xx_it.c **** /**
 141:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 142:Core/Src/stm32f4xx_it.c ****   */
 143:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 144:Core/Src/stm32f4xx_it.c **** {
 131              		.loc 1 144 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB136:
 145:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c **** 
 147:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 148:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 149:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccLY52cm.s 			page 6


 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 151:Core/Src/stm32f4xx_it.c **** }
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c **** /**
 154:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 155:Core/Src/stm32f4xx_it.c ****   */
 156:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 157:Core/Src/stm32f4xx_it.c **** {
 150              		.loc 1 157 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE136:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB137:
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f4xx_it.c **** 
 163:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f4xx_it.c **** }
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c **** /**
 167:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 168:Core/Src/stm32f4xx_it.c ****   */
 169:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 170:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 170 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE137:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB138:
 171:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 172:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccLY52cm.s 			page 7


 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 177:Core/Src/stm32f4xx_it.c **** }
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c **** /**
 180:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 181:Core/Src/stm32f4xx_it.c ****   */
 182:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 183:Core/Src/stm32f4xx_it.c **** {
 188              		.loc 1 183 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 183 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 184:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 187:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 187 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 201 0006 08BD     		pop	{r3, pc}
 202              		.cfi_endproc
 203              	.LFE138:
 205              		.text
 206              	.Letext0:
 207              		.file 2 "/usr/lib/gcc/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_ty
 208              		.file 3 "/usr/lib/gcc/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 209              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 210              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 211              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccLY52cm.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccLY52cm.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccLY52cm.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccLY52cm.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccLY52cm.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccLY52cm.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccLY52cm.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccLY52cm.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccLY52cm.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccLY52cm.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccLY52cm.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
